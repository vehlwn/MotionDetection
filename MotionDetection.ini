; For the format of this file see
; https://docs.pocoproject.org/current/Poco.Util.IniFileConfiguration.html
; and https://docs.pocoproject.org/current/Poco.Util.AbstractConfiguration.html

; http_server.host_and_port is required. Consists of a host address or IP
; address and a port number. Specifies socket address to bind web server.
[http_server]
host_and_port = 127.0.0.1:5000

; [video_capture] section contains input device parameters:
; - filename is required. Can be name of video file or URL or any valid argument
; for cv::VideoCapture constructor. Detailed format see in
; https://docs.opencv.org/4.5.5/d8/dfe/classcv_1_1VideoCapture.html#ac4107fb146a762454a8a87715d9b7c96
; - api_preference is optional. Default is CAP_ANY. If present it must be one
; of a {CAP_ANY, CAP_FFMPEG, CAP_V4L2}. For description see
; cv::VideoCaptureAPIs enum documentation:
; https://docs.opencv.org/4.5.5/d4/d15/group__videoio__flags__base.html#ga023786be1ee68a9105bf2e48c700294d
; - fourcc is optional if your video device can produce multiple formats. To get
; list of available formats run `v4l2-ctl --list-formats-ext --device /dev/videoN`.
; - size is optional pair of positive ints if your video device can produce
; multiple formats. If present it must be of a form <WIDTH>'x'<HEIGHT>.
; - framerate is optional positive double if your video device can produce
; multiple formats.
[video_capture]
filename = /dev/video0
api_preference = CAP_V4L2
fourcc = MJPG
size = 1280x720
framerate = 30

; [background_subtractor] section specifies background segmentation algorithm
; and its parameters:
; - algorithm is required. Must be one of a {KNN, MOG2}.
;
; Alternative if algorithm = MOG2:
; https://docs.opencv.org/4.5.5/de/de1/group__video__motion.html#ga2beb2dee7a073809ccec60f145b6b29c
; - history is optional positive int. Default is 500. Specifies the number of
; last frames that affect the background model.
; - var_threshold is optional positive double. Default is 16.0. Denotes
; threshold on the squared Mahalanobis distance between the pixel and the model
; to decide whether a pixel is well described by the background model.
; - detect_shadows is optional bool. Default is true. If true, the algorithm
; will detect shadows and mark them. Note that it decreases the speed a bit.
[background_subtractor]
algorithm = MOG2
history = 500
var_threshold = 16.0
detect_shadows = false

; Alternative if algorithm is KNN:
; https://docs.opencv.org/4.5.5/de/de1/group__video__motion.html#gac9be925771f805b6fdb614ec2292006d
; - history is optional positive int. Default is 500. Specifies the number of
; last frames that affect the background model.
; - dist_2_threshold is optional positive double. Default is 400.0. Denotes the
; threshold on the squared distance between the pixel and the sample to decide
; whether a pixel is close to that sample.
; - detect_shadows has the same meaning as in MOG2.
; [background_subtractor]
; algorithm = KNN
; history = 500
; dist_2_threshold = 400.0
; detect_shadows = false

; [preprocess.resize] section is optional preprocess step. factor takes
; positive double. If present it resizes input images by specified factor in
; each direction before passing them to the smoothing filter below (if any).
; Use it to improve speed of the background_subtractor algorithm.
[preprocess.resize]
factor = 0.5

; [preprocess.smoothing] section is optional preprocess step. It is applied
; after optional resizing step and immediately before appying
; background_subtractor to reduce input noise.
; - algorithm is optional. If present it must be one of the {normalized_box, gaussian, median}
;
; Alternative if algorithm = normalized_box:
; https://docs.opencv.org/4.5.3/d4/d86/group__imgproc__filter.html#ga8c45db9afe636703801b0b2e440fce37
; This filter takes the average of all the pixels under the kernel. This is the
; simplest of three filters.
; - kernel_size is required positive int.
[preprocess.smoothing]
algorithm = normalized_box
kernel_size = 11

; Alternative if algorithm = gaussian:
; https://docs.opencv.org/4.5.3/d4/d86/group__imgproc__filter.html#gaabe8c836e97159a9193fb0b11ac52cf1
; This filter uses Gaussian kernel.
; - kernel_size is required positive odd int.
; - sigma is optional non negative double. Denotes Gaussian kernel standard
; deviation in both X and Y directions. 0.0 is a special value which means it
; will be computed to some default value.
; [preprocess.smoothing]
; algorithm = gaussian
; kernel_size = 11
; sigma = 0

; Alternative if algorithm = median:
; https://docs.opencv.org/4.5.3/d4/d86/group__imgproc__filter.html#ga564869aa33e58769b4469101aac458f9
; Non-linear filter which takes the median of all the pixels under the kernel
; area and the central element is replaced with this median value. This is the
; slowest of three filters.
; - kernel_size is required odd integer greater than 2.
; [preprocess.smoothing]
; algorithm = median
; kernel_size = 11
